# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  ruby: circleci/ruby@1.1.2
  #heroku: circleci/heroku@1.2.3
  aws-ecr: circleci/aws-ecr@6.15
  aws-ecs: circleci/aws-ecs@2.0.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    docker:
      - image: circleci/ruby:2.7
    working_directory: ~/rails-tutrial-sampleapp/src
    steps:
      - checkout:
          path: ~/rails-tutrial-sampleapp
      - ruby/install-deps
  test:
    docker:
      - image: circleci/ruby:2.7
      - image: circleci/mysql:5.5
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: app_test
          MYSQL_USER: root
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    working_directory: ~/rails-tutrial-sampleapp/src
    steps:
      - checkout:
          path: ~/rails-tutrial-sampleapp
      - ruby/install-deps
      - run:
          name: Database setup
          command: bundle exec rails db:migrate
      - run:
          name: test
          command: bundle exec rake test

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
         requires:
             - build
      - aws-ecr/build-and-push-image:
          requires:
            - test
          region: AWS_REGION
          account-url: AWS_ECR_ACCOUNT_URL
          create-repo: true
          dockerfile: ./Dockerfile
          repo: '${MY_APP_PREFIX}-repo'
          tag: "${CIRCLE_SHA1}"
          filters:
              branches:
                  only: main
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: '${MY_APP_PREFIX}-task'
          cluster-name: '${MY_APP_PREFIX}-cluster'
          service-name: '${MY_APP_PREFIX}-service'
          container-image-name-updates: 'container=${MY_APP_PREFIX}-container,tag=${CIRCLE_SHA1}'
